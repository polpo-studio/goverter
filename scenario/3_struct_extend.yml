input:
    input.go: |
        package structs

        // goverter:converter
        // goverter:extend ZeroConvert EmptyConverter
        type Converter interface {
            Convert(source Input) Output
        }

        func ZeroConvert(*int) int {
            return 0
        }
        func EmptyConverter(Converter, *string) string {
            return ""
        }

        type Input struct {
            Name *string
            Age *int
        }
        type Output struct {
            Name string
            Age int
        }
success: |
    // Code generated by github.com/polpo-studio/goverter, DO NOT EDIT.

    package generated

    import execution "github.com/polpo-studio/goverter/execution"

    type ConverterImpl struct{}

    func (c *ConverterImpl) Convert(source execution.Input) execution.Output {
    	var structsOutput execution.Output
    	structsOutput.Name = execution.EmptyConverter(c, source.Name)
    	structsOutput.Age = execution.ZeroConvert(source.Age)
    	return structsOutput
    }
